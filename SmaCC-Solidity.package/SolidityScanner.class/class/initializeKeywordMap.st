generated-initialization
initializeKeywordMap
	keywordMap := Dictionary new.
	#(#(113 'address' 70) #(113 'anonymous' 101) #(113 'as' 26) #(113 'assembly' 58) #(113 'bool' 65) #(113 'break' 61) #(113 'byte' 102) #(113 'bytes' 102) #(113 'bytes1' 102) #(113 'bytes10' 102) #(113 'bytes11' 102) #(113 'bytes12' 102) #(113 'bytes13' 102) #(113 'bytes14' 102) #(113 'bytes15' 102) #(113 'bytes16' 102) #(113 'bytes17' 102) #(113 'bytes18' 102) #(113 'bytes19' 102) #(113 'bytes2' 102) #(113 'bytes20' 102) #(113 'bytes21' 102) #(113 'bytes22' 102) #(113 'bytes23' 102) #(113 'bytes24' 102) #(113 'bytes25' 102) #(113 'bytes26' 102) #(113 'bytes27' 102) #(113 'bytes28' 102) #(113 'bytes29' 102) #(113 'bytes3' 102) #(113 'bytes30' 102) #(113 'bytes31' 102) #(113 'bytes32' 102) #(113 'bytes4' 102) #(113 'bytes5' 102) #(113 'bytes6' 102) #(113 'bytes7' 102) #(113 'bytes8' 102) #(113 'bytes9' 102) #(113 'constant' 35) #(113 'continue' 60) #(113 'contract' 86) #(113 'days' 73) #(113 'delete' 21) #(113 'do' 59) #(113 'else' 31) #(113 'enum' 100) #(113 'ether' 63) #(113 'event' 98) #(113 'external' 34) #(113 'false' 109) #(113 'finney' 62) #(113 'for' 81) #(113 'from' 57) #(113 'function' 91) #(113 'hours' 72) #(113 'if' 82) #(113 'import' 17) #(113 'indexed' 97) #(113 'int' 103) #(113 'int104' 103) #(113 'int112' 103) #(113 'int120' 103) #(113 'int128' 103) #(113 'int136' 103) #(113 'int144' 103) #(113 'int152' 103) #(113 'int16' 103) #(113 'int160' 103) #(113 'int168' 103) #(113 'int176' 103) #(113 'int184' 103) #(113 'int192' 103) #(113 'int200' 103) #(113 'int208' 103) #(113 'int216' 103) #(113 'int224' 103) #(113 'int232' 103) #(113 'int24' 103) #(113 'int240' 103) #(113 'int248' 103) #(113 'int256' 103) #(113 'int32' 103) #(113 'int40' 103) #(113 'int48' 103) #(113 'int56' 103) #(113 'int64' 103) #(113 'int72' 103) #(113 'int8' 103) #(113 'int80' 103) #(113 'int88' 103) #(113 'int96' 103) #(113 'internal' 33) #(113 'is' 89) #(113 'let' 67) #(113 'library' 87) #(113 'mapping' 95) #(113 'memory' 93) #(113 'minutes' 71) #(113 'modifier' 90) #(113 'new' 53) #(113 'payable' 36) #(113 'pragma' 15) #(113 'private' 79) #(113 'public' 78) #(113 'return' 56) #(113 'returns' 99) #(113 'seconds' 76) #(113 'storage' 94) #(113 'string' 66) #(113 'struct' 88) #(113 'szabo' 55) #(113 'throw' 75) #(113 'true' 109) #(113 'uint' 104) #(113 'uint104' 104) #(113 'uint112' 104) #(113 'uint120' 104) #(113 'uint128' 104) #(113 'uint136' 104) #(113 'uint144' 104) #(113 'uint152' 104) #(113 'uint16' 104) #(113 'uint160' 104) #(113 'uint168' 104) #(113 'uint176' 104) #(113 'uint184' 104) #(113 'uint192' 104) #(113 'uint200' 104) #(113 'uint208' 104) #(113 'uint216' 104) #(113 'uint224' 104) #(113 'uint232' 104) #(113 'uint24' 104) #(113 'uint240' 104) #(113 'uint248' 104) #(113 'uint256' 104) #(113 'uint32' 104) #(113 'uint40' 104) #(113 'uint48' 104) #(113 'uint56' 104) #(113 'uint64' 104) #(113 'uint72' 104) #(113 'uint8' 104) #(113 'uint80' 104) #(113 'uint88' 104) #(113 'uint96' 104) #(113 'using' 80) #(113 'var' 52) #(113 'weeks' 74) #(113 'wei' 54) #(113 'while' 77) #(113 'years' 69))
		do: [ :each | 
			(keywordMap at: each first ifAbsentPut: [ Dictionary new ])
				at: (each at: 2)
				put: each last ].
	^ keywordMap